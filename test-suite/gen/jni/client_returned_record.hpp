// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from client_interface.djinni

#pragma once

#include "client_returned_record.hpp"
#include "djinni_support.hpp"

namespace jnins {

class ClientReturnedRecord final {
public:
    using CppType = ::ClientReturnedRecord;
    using JniType = jobject;

    using Boxed = ClientReturnedRecord;

    ~ClientReturnedRecord();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    ClientReturnedRecord();
    friend ::djinni::JniClass<ClientReturnedRecord>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("ClientReturnedRecord") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(JLjava/lang/String;Ljava/lang/String;)V") };
    const jfieldID field_recordId { ::djinni::jniGetFieldID(clazz.get(), "recordId", "J") };
    const jfieldID field_content { ::djinni::jniGetFieldID(clazz.get(), "content", "Ljava/lang/String;") };
    const jfieldID field_misc { ::djinni::jniGetFieldID(clazz.get(), "misc", "Ljava/lang/String;") };
};

}  // namespace jnins
