// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from duration.djinni

#include "RecordWithDurationAndDerivings.h"  // my header
#include "translation.h"

namespace Cxns {


::RecordWithDurationAndDerivings RecordWithDurationAndDerivings::toCpp() {
    return ::RecordWithDurationAndDerivings(
        transform<std::chrono::duration<double, std::nano>, Windows::Foundation::TimeSpan>()(Dt));
}

RecordWithDurationAndDerivings^ RecordWithDurationAndDerivings::fromCpp(const ::RecordWithDurationAndDerivings& value) {
    RecordWithDurationAndDerivings^ ret = ref new RecordWithDurationAndDerivings();
    ret->Dt = transform<std::chrono::duration<double, std::nano>, Windows::Foundation::TimeSpan>()(value.dt);
    return ret;
}

bool RecordWithDurationAndDerivings::Equals(RecordWithDurationAndDerivings^ rhs) {
    return this->Dt == rhs->Dt;
}

int32 RecordWithDurationAndDerivings::CompareTo(RecordWithDurationAndDerivings^ rhs) {
    if (rhs == nullptr) return 1;
    int32 tempResult = 0;
    if (this->Dt < rhs->Dt) {
        return -1;
    } else if (rhs->Dt < this->Dt) {
        tempResult = 1;
    } else {
        tempResult = 0;
    }
    if(tempResult) return tempResult;
    return 0;
}

}  // namespace Cxns
