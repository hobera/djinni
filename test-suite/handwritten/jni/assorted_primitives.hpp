// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from primtypes.djinni

#pragma once

#include "assorted_primitives.hpp"
#include "djinni_support.hpp"

namespace jnins {

class AssortedPrimitives final {
public:
    using CppType = ::cppns::AssortedPrimitives;
    using JniType = jobject;

    using Boxed = AssortedPrimitives;

    ~AssortedPrimitives();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    AssortedPrimitives();
    friend ::djinni::JniClass<AssortedPrimitives>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("AssortedPrimitives") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(ZBSIJFDLjava/lang/Boolean;Ljava/lang/Byte;Ljava/lang/Short;Ljava/lang/Integer;Ljava/lang/Long;Ljava/lang/Float;Ljava/lang/Double;)V") };
    const jfieldID field_b { ::djinni::jniGetFieldID(clazz.get(), "b", "Z") };
    const jfieldID field_eight { ::djinni::jniGetFieldID(clazz.get(), "eight", "B") };
    const jfieldID field_sixteen { ::djinni::jniGetFieldID(clazz.get(), "sixteen", "S") };
    const jfieldID field_thirtytwo { ::djinni::jniGetFieldID(clazz.get(), "thirtytwo", "I") };
    const jfieldID field_sixtyfour { ::djinni::jniGetFieldID(clazz.get(), "sixtyfour", "J") };
    const jfieldID field_fthirtytwo { ::djinni::jniGetFieldID(clazz.get(), "fthirtytwo", "F") };
    const jfieldID field_fsixtyfour { ::djinni::jniGetFieldID(clazz.get(), "fsixtyfour", "D") };
    const jfieldID field_oB { ::djinni::jniGetFieldID(clazz.get(), "oB", "Ljava/lang/Boolean;") };
    const jfieldID field_oEight { ::djinni::jniGetFieldID(clazz.get(), "oEight", "Ljava/lang/Byte;") };
    const jfieldID field_oSixteen { ::djinni::jniGetFieldID(clazz.get(), "oSixteen", "Ljava/lang/Short;") };
    const jfieldID field_oThirtytwo { ::djinni::jniGetFieldID(clazz.get(), "oThirtytwo", "Ljava/lang/Integer;") };
    const jfieldID field_oSixtyfour { ::djinni::jniGetFieldID(clazz.get(), "oSixtyfour", "Ljava/lang/Long;") };
    const jfieldID field_oFthirtytwo { ::djinni::jniGetFieldID(clazz.get(), "oFthirtytwo", "Ljava/lang/Float;") };
    const jfieldID field_oFsixtyfour { ::djinni::jniGetFieldID(clazz.get(), "oFsixtyfour", "Ljava/lang/Double;") };
};

}  // namespace jnins
